// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training.Data.EF;

namespace Training.Data.EF.Migrations
{
    [DbContext(typeof(UnitOfWork))]
    [Migration("20200623033356_Studios_Creation")]
    partial class Studios_Creation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Training.Data.Domain.Studio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c734cf-76f6-4db6-839a-013ff6bbc875"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6198),
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6225),
                            Name = "Studio 1"
                        },
                        new
                        {
                            Id = new Guid("4328e74c-d820-4f6d-8fb0-fd49a552d65d"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6565),
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6568),
                            Name = "Universal Studios"
                        },
                        new
                        {
                            Id = new Guid("1d3e5008-5c35-4180-a898-55c5f5ca7fe8"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6585),
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6586),
                            Name = "Studio 3"
                        },
                        new
                        {
                            Id = new Guid("bce0d965-1fe6-46e7-bc4c-94ac3628091f"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6589),
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 266, DateTimeKind.Local).AddTicks(6590),
                            Name = "Studio 4"
                        });
                });

            modelBuilder.Entity("Training.Data.Domain.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2619ad5-9f66-46be-b681-cac9015bd961"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 264, DateTimeKind.Local).AddTicks(4317),
                            DirectedBy = "Bong Joon Ho",
                            Duration = 132,
                            Genre = "Comedy, Drama, Trhiller",
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(2449),
                            Name = "Parasite",
                            StudioId = new Guid("d9c734cf-76f6-4db6-839a-013ff6bbc875")
                        },
                        new
                        {
                            Id = new Guid("c7bdeb3c-d43c-439c-9291-9b3294837577"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3597),
                            DirectedBy = "Sam Mendez",
                            Duration = 119,
                            Genre = "Drama, War",
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3618),
                            Name = "1917",
                            StudioId = new Guid("4328e74c-d820-4f6d-8fb0-fd49a552d65d")
                        },
                        new
                        {
                            Id = new Guid("aa9f4b38-5e3f-4fe3-b11e-3e800a66f64f"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3635),
                            DirectedBy = "Martin Scorsese",
                            Duration = 209,
                            Genre = "Biography, Crime, Drama",
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3637),
                            Name = "The Irishman",
                            StudioId = new Guid("1d3e5008-5c35-4180-a898-55c5f5ca7fe8")
                        },
                        new
                        {
                            Id = new Guid("63f04373-db66-4e88-bf43-906d31888bde"),
                            CreationDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3641),
                            DirectedBy = "Quentin Tarantino",
                            Duration = 161,
                            Genre = "Comedy, Drama",
                            ModifiedDate = new DateTime(2020, 6, 23, 0, 33, 56, 265, DateTimeKind.Local).AddTicks(3642),
                            Name = "Once Upoin a Time... In Hollywood",
                            StudioId = new Guid("1d3e5008-5c35-4180-a898-55c5f5ca7fe8")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
